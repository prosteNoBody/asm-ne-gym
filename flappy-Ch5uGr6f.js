import{C as d,a as u,b as l}from"./Control-Bpe8c0c8.js";class _ extends u{constructor(t){super(),this._calculateActions=t,this._controls={jump:!1}}updateState(t){const s=[t.birdData.jumped?1:0,t.birdData.position,t.birdData.velocity],i=this._calculateActions(s);return t.controls.jump=i[0]>.5,t.controls={...this._controls},t}}class a extends l{constructor(t){super({width:20,height:20},t,!0),this.data={velocity:a.JUMP_VEL,position:t.y,jumped:!1}}render(t){t.fillStyle="blue",t.fillRect(this._pos.x,this._pos.y,this._size.width,this._size.height)}static{this.MAX_VEL=10}static{this.JUMP_VEL=-5}update(t,e){this.data.velocity+=.2,this.data.velocity>a.MAX_VEL&&(this.data.velocity=a.MAX_VEL),t.controls.jump&&!this.data.jumped?(this.data.jumped=!0,this.data.velocity=a.JUMP_VEL):t.controls.jump||(this.data.jumped=!1),t.score++,this._pos.y+=this.data.velocity,this._pos.y<-100?this._pos.y=-100:this._pos.y+this._size.height>t.mapSize.height&&(this.destroy(),this._engineCallbacks?.stopEngine()),this.data.position=this._pos.y,t.birdData=this.data}collide(t,e){e instanceof o&&(this.destroy(),this._engineCallbacks?.stopEngine())}}class o extends l{static{this.WIDTH=75}render(t){t.fillStyle="red",t.fillRect(this._pos.x,this._pos.y,this._size.width,this._size.height)}update(t,e){this._pos.x-=p.PIPE_STEP,this._pos.x+o.WIDTH<0&&this.destroy()}collide(t,e){}}class p extends d{constructor(t,e){const s=new _(e);super(s,h=>{t(h.score)});const i=new a({x:50,y:200});this.registerEntity(i)}static{this.PIPE_STEP=4}updateGame(t,e){if(t.pipeData.x-=p.PIPE_STEP,t.pipeData.x+o.WIDTH<0){t.pipeData.x=t.mapSize.width+o.WIDTH;const s=100,i=50,h=Math.ceil(Math.random()*(t.mapSize.height-s*2-i*2))+s,r=new o({width:o.WIDTH,height:h-i},{x:t.pipeData.x,y:0},!0),c=new o({width:o.WIDTH,height:t.mapSize.height-h-i},{x:t.pipeData.x,y:h+i},!0);t.pipeData.y=h+i,this.registerEntities([r,c])}}renderMap(t){t.fillStyle="#a3fcff",t.fillRect(0,0,this._sharedState.mapSize.width,this._sharedState.mapSize.height)}getSize(){return this._sharedState.mapSize}initSharedState(){return{score:0,birdData:{velocity:0,position:0,jumped:!1},pipeData:{x:-o.WIDTH,y:0},controls:{jump:!1},mapSize:{width:750,height:750}}}}const y=(n,t)=>new Promise(e=>{const s=new p(i=>{e(i)},n);if(t){const i=s.getSize();t.width=i.width,t.height=i.height;const h=t.getContext("2d");h&&s.mount(h)}s.run()});export{y as default};
